import type { NextApiRequest, NextApiResponse } from 'next';

interface RequestBody {
  theme: string;
  notes: string;
  day: number;
}

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse
) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    const { theme, notes, day } = req.body as RequestBody;

    if (!theme) {
      return res.status(400).json({ error: 'Theme is required' });
    }

    // For now, we'll use a mock response since Gemini API requires setup
    // In production, you would integrate with Google's Gemini API here
    const mockResponse = generateMockContent(theme, notes, day);

    // Simulate API delay
    await new Promise(resolve => setTimeout(resolve, 1500));

    return res.status(200).json({ content: mockResponse });
  } catch (err) {
    console.error('Error generating content:', err);
    return res.status(500).json({ error: 'Failed to generate content' });
  }
}

function generateMockContent(theme: string, notes: string | undefined, day: number): string {
  const templates = [
    `üåü AI –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–æ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ –∑–∞ "${theme}" (–î–µ–Ω ${day})\n\n–í—ä–∑ –æ—Å–Ω–æ–≤–∞ –Ω–∞ –≤–∞—à–∏—Ç–µ –±–µ–ª–µ–∂–∫–∏: "${notes ?? '–ù—è–º–∞ –±–µ–ª–µ–∂–∫–∏'}"\n\n–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞ –ø–æ—Å—Ç:\n‚Ä¢ –ó–∞–ø–æ—á–Ω–µ—Ç–µ —Å –≤—ä–ø—Ä–æ—Å, –∫–æ–π—Ç–æ –ø—Ä–∏–≤–ª–∏—á–∞ –≤–Ω–∏–º–∞–Ω–∏–µ—Ç–æ\n‚Ä¢ –°–ø–æ–¥–µ–ª–µ—Ç–µ –ª–∏—á–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è –∏–ª–∏ –æ–ø–∏—Ç\n‚Ä¢ –î–∞–π—Ç–µ –ø—Ä–∞–∫—Ç–∏—á–Ω–∏ —Å—ä–≤–µ—Ç–∏\n‚Ä¢ –ó–∞–≤—ä—Ä—à–µ—Ç–µ —Å –ø—Ä–∏–∑–∏–≤ –∑–∞ –¥–µ–π—Å—Ç–≤–∏–µ\n\n–•–∞—à—Ç–∞–≥–æ–≤–µ: #${theme.replaceAll(/\s+/g, '')} #–ú–∞–Ω–∏—Ñ–µ—Å—Ç–∏—Ä–∞—â–∏–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä #–†–∞–∑–≤–∏—Ç–∏–µ`,

    `‚ú® –ö—Ä–µ–∞—Ç–∏–≤–Ω–∞ –∏–¥–µ—è –∑–∞ "${theme}" (–î–µ–Ω ${day})\n\n–ò–Ω—Å–ø–∏—Ä–∏—Ä–∞–Ω–æ –æ—Ç: "${notes ?? '–í–∞—à–∞—Ç–∞ –µ–Ω–µ—Ä–≥–∏—è'}"\n\n–°—ä–¥—ä—Ä–∂–∞–Ω–∏–µ:\nüéØ –ó–∞–≥–ª–∞–≤–∏–µ: "–ö–∞–∫ ${theme} –ø—Ä–æ–º–µ–Ω—è –∂–∏–≤–æ—Ç–∞ –≤–∏"\nüìù –°—Ç—Ä—É–∫—Ç—É—Ä–∞:\n   - –í—ä–≤–µ–¥–µ–Ω–∏–µ —Å –µ–º–æ—Ü–∏—è\n   - 3 –∫–ª—é—á–æ–≤–∏ —Ç–æ—á–∫–∏\n   - –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ —Å—ä–≤–µ—Ç\n   - –í—ä–ø—Ä–æ—Å –∫—ä–º –∞—É–¥–∏—Ç–æ—Ä–∏—è—Ç–∞\n\nüí° –°—ä–≤–µ—Ç: –ò–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ –≤–∏–∑—É–∞–ª–Ω–∏ –µ–ª–µ–º–µ–Ω—Ç–∏ –∑–∞ –ø–æ-–≥–æ–ª—è–º–æ –≤—ä–∑–¥–µ–π—Å—Ç–≤–∏–µ`,

    `üöÄ –°—Ç—Ä–∞—Ç–µ–≥–∏—è –∑–∞ "${theme}" (–î–µ–Ω ${day})\n\n–ë–∞–∑–∏—Ä–∞–Ω–æ –Ω–∞: "${notes ?? '–ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–∏ –ø—Ä–æ–∑—Ä–µ–Ω–∏—è'}"\n\n–ü–ª–∞–Ω –∑–∞ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ:\n1. –°–ø–æ–¥–µ–ª–µ—Ç–µ –ø—Ä–µ–¥–∏–∑–≤–∏–∫–∞—Ç–µ–ª—Å—Ç–≤–æ\n2. –û–±—è—Å–Ω–µ—Ç–µ –∫–∞–∫ ${theme} –ø–æ–º–∞–≥–∞\n3. –î–∞–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏ —Å—Ç—ä–ø–∫–∏\n4. –ü–æ–∫–∞–Ω–µ—Ç–µ –∑–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ\n\n–§–æ—Ä–º–∞—Ç: –ö–∞—Ä—É—Å–µ–ª –æ—Ç 5-7 —Å–ª–∞–π–¥–∞\n–¢–æ–Ω: –í–¥—ä—Ö–Ω–æ–≤—è–≤–∞—â –∏ –ø—Ä–∞–∫—Ç–∏—á–µ–Ω\n–¶–µ–ª: –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ + –ê–Ω–≥–∞–∂–∏—Ä–∞–Ω–æ—Å—Ç`
  ];

  const selectedTemplate = templates[Math.floor(Math.random() * templates.length)];
  if (!selectedTemplate) {
    return ''; // Return empty string as fallback to ensure string type
  }
  return selectedTemplate;
}